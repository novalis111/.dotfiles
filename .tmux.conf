#
# Compatibility
# https://stackoverflow.com/questions/35016458/how-to-write-if-statement-in-tmux-conf-to-set-different-options-for-different-t#40902312
#
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

#
# Additional config
# Loosely based on https://github.com/tom-james-watson/dotfiles
#

set-option -g prefix C-a
bind-key C-a last-window
bind-key v run-shell "tmux split-window -h; tmux select-layout even-horizontal"

# set the bell
set-option -g bell-action any
set -g visual-bell on

# Start numbering at 1
set -g base-index 1

# Massive scrollback
set -g history-limit 10000

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Center align status bar
set-option -g status-justify centre

# Clean status bar
set -g status-left " "
set -g status-right " #(cat /proc/loadavg | cut -d' ' -f 1) "

# Set status bar colors
set -g status-bg default
set-option -g status-fg white
set-window-option -g window-status-bg colour240
set-window-option -g window-status-fg white
set-window-option -g window-status-current-bg colour41
set-window-option -g window-status-current-fg black
set-window-option -g window-status-separator ' '

# Make new windows/panes open to the current path instead of the path tmux was
# started from
bind '-' split-window -c "#{pane_current_path}"
bind '|' split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Shift+arrows to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Ctrl+Shift+arrows to reorder windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Alt+arrows to change pane
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Alt+Shift+arrows to resize panes
bind-key -n M-S-Up resize-pane -U 3
bind-key -n M-S-Down resize-pane -D 3
bind-key -n M-S-Left resize-pane -L 5
bind-key -n M-S-Right resize-pane -R 5

# Use default shell
#set-option -g default-shell $SHELL

# vi key bindings
setw -g mode-keys vi
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection
bind-key -Tcopy-mode-vi Escape send -X cancel
bind-key -Tcopy-mode-vi V send -X rectangle-toggle

# Conditionally include mac/linux conf
# if-shell "uname | grep -q Darwin" "source-file ~/.tmux-mac.conf" "source-file ~/.tmux-linux.conf"

# Set fish as the default command. This will basically change tmux to drop into
# a fish shell instead of the os default. Changing the default system shell to
# fish causes weird things to happen in Gnome.
if-shell '[ -x /usr/bin/fish ]' \
  'set-option -g default-shell /usr/bin/fish; \
    set-option -g default-command /usr/bin/fish'
