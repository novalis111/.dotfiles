# Resume or start tmux session
tm ()
{
	[ -z "$1" ] && SESS="mytmux" || SESS="$1"
	if command -v tmux >/dev/null 2>&1; then
		tmux attach -t $SESS || tmux new -s $SESS
	fi
}

tmk ()
{
	tmux kill-server
}

# Add + commit + push git in current dir, takes commit msg as param
gdrop ()
{
    [ -z "$1" ] && MSG="auto commit" || MSG="$1"
    git add . && git commit -a -m"$MSG" && git push
}

# Add + commit + checkout master + merge + push + checkout develop
gdep() {
    local BRANCH=$(git rev-parse --abbrev-ref HEAD)

    if [ "$BRANCH" != "develop" ]; then
        echo "Error: Not on 'develop' branch! Aborting."
        return 1
    fi

    local MSG=${1:-"auto commit"}

    echo "On 'develop' branch. Proceeding..."
    
    git add . && git commit -a -m "$MSG"

    # Wechsle zu master, merge develop, pushe, dann zurÃ¼ck zu develop
    git checkout master && git merge develop && git push && git checkout develop
}

# conda
[ -r ${HOME}/miniconda3/etc/profile.d/conda.sh ] && . ${HOME}/miniconda3/etc/profile.d/conda.sh

# aliases
[ -r ${HOME}/.dotfiles/.my_aliases ] && . ${HOME}/.dotfiles/.my_aliases

# direnv
command -v direnv &>/dev/null && eval "$(direnv hook bash)"
show_virtual_env() {
  if [[ -n "$VIRTUAL_ENV" && -n "$DIRENV_DIR" ]]; then
    echo "($(basename $VIRTUAL_ENV))"
  fi
}
export -f show_virtual_env
PS1='$(show_virtual_env)'$PS1

# own bins
[ -d ${HOME}/bin ] && export PATH="${HOME}/bin:$PATH"
[ -d ${HOME}/.local/bin ] && export PATH="${HOME}/.local/bin:$PATH"

# homebrew
[ -d /home/linuxbrew/.linuxbrew ] && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)

# colored prompt
if [ -n "$SSH_CLIENT" ]; then
    sshtxt="[ssh] "
fi

# Format prompt
export PS1="\[\033[38;5;248m\]\u\[$(tput sgr0)\]\[\033[38;5;253m\]@\[$(tput sgr0)\]\[\033[38;5;113m\]\H\[$(tput sgr0)\]\[\033[38;5;15m\]:\[$(tput sgr0)\]\[\033[38;5;111m\]\w\[$(tput sgr0)\]\[\033[38;5;15m\]\n${sshtxt}\[$(tput sgr0)\]\[\033[38;5;253m\]\\$\[$(tput sgr0)\]\[\033[38;5;15m\] \[$(tput sgr0)\]"

# Remove duplicates from bash history
export HISTCONTROL=ignoreboth:erasedups

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
